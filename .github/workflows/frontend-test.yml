name: Test Frontend

on:
  push:
    branches:
      - dev
      - master
    paths:
      - 'site/**'
      - '!*/**/*.md'
      - '.github/workflows/frontend-test.yml'
  pull_request:
    paths:
      - 'site/**'
      - '!*/**/*.md'
      - '.github/workflows/frontend-test.yml'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: ./site/node_modules/
          key: ${{ runner.os }}-build-${{ hashFiles('./site/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: site

      - name: Build project
        run: npm run build
        working-directory: site

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: ./site/node_modules/
          key: ${{ runner.os }}-build-${{ hashFiles('./site/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install Node v16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: site

      - name: Run ESLint
        run: npm run lint
        working-directory: site

      - name: Run Prettier
        run: npm run prettier
        working-directory: site

      - name: Run Stylelint
        run: npm run stylelint
        working-directory: site
