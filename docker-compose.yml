version: '3.1'

services:

  horizon-db:
    image: postgres:13.4-alpine
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./scripts/:/docker-entrypoint-initdb.d/
    ports:
      - 54321:5432
    networks:
      - backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - horizon-db
    ports:
      - 5050:5050
    volumes:
      - ./data/servers.json:/pgadmin4/servers.json
      - ./data/pgadmin:/var/lib/pgadmin
    networks:
      - backend
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050

  typesense:
    image: typesense/typesense:0.22.1
    restart: always
    volumes:
      - ./data/typesense:/tmp/typesense-data
    ports:
      - 18108:8108
    networks:
      - backend
    environment:
      TYPESENSE_DATA_DIR: ${TYPESENSE_DATA_DIR}
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
      TYPESENSE_ENABLE_CORS: "true"

  horizon-api:
    build: ./api
    restart: always
    depends_on:
      - horizon-db
      - typesense
    ports:
      - 443:8081
    volumes:
      - ./api/uploads:/app/uploads
    networks:
      - backend
    environment:
      WAIT_HOSTS: horizon-db:5432, typesense:8108
      MIKRO_ORM_HOST: ${MIKRO_ORM_HOST}
      TYPESENSE_HOST: ${TYPESENSE_HOST}
      TYPESENSE_PORT: ${TYPESENSE_PORT}

networks:
  backend:
    driver: bridge
